@using BrokerBudget.Domain.Entities.Identity;
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IConfiguration Configuration

@{
    Layout = "_Layout";
}


@model BrokerBudget.Application.UseCases.Purchases.PurchaseResponse[]


<h3 class="header-text">Берилган Юклар</h3>

<div class="row">
    <div class="col ">
        <div class="tool-bar">

            <div>
                <a href="@Url.Action("CreateClientPurchase")" class="btn btn-primary mr-2">
                    Юк қўшиш
                </a>
            </div>

            <div style="display:flex; gap:5px">
                <button id="refreshButton" class="btn btn-warning">
                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512">
                        <style>
                            svg {
                                fill: #050505
                            }</style>
                        <path d="M142.9 142.9c62.2-62.2 162.7-62.5 225.3-1L327 183c-6.9 6.9-8.9 17.2-5.2 26.2s12.5 14.8 22.2 14.8H463.5c0 0 0 0 0 0H472c13.3 0 24-10.7 24-24V72c0-9.7-5.8-18.5-14.8-22.2s-19.3-1.7-26.2 5.2L413.4 96.6c-87.6-86.5-228.7-86.2-315.8 1C73.2 122 55.6 150.7 44.8 181.4c-5.9 16.7 2.9 34.9 19.5 40.8s34.9-2.9 40.8-19.5c7.7-21.8 20.2-42.3 37.8-59.8zM16 312v7.6 .7V440c0 9.7 5.8 18.5 14.8 22.2s19.3 1.7 26.2-5.2l41.6-41.6c87.6 86.5 228.7 86.2 315.8-1c24.4-24.4 42.1-53.1 52.9-83.7c5.9-16.7-2.9-34.9-19.5-40.8s-34.9 2.9-40.8 19.5c-7.7 21.8-20.2 42.3-37.8 59.8c-62.2 62.2-162.7 62.5-225.3 1L185 329c6.9-6.9 8.9-17.2 5.2-26.2s-12.5-14.8-22.2-14.8H48.4h-.7H40c-13.3 0-24 10.7-24 24z" />
                    </svg>
                </button>

                <input id="searchInput" type="text" class="form-control searchInput-style" placeholder="Излаш">

                <div class="input-group-append">
                    <button id="searchButtonSimple" class="btn btn-info" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512">
                            <style>
                                svg {
                                    fill: #0c0d0d
                                }</style>
                            <path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
                        </svg>
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="tool-bar2">
                 <div>
                     @if (User.IsInRole("Admin"))
                     {
                               <a asp-controller="Purchase" asp-action="GetAllPurchasesExcel" class="btn btn-success">
                                   Excel
                               </a>
                     }
                 </div>
            <div style="display:flex; gap:5px">
                <select id="sortColumn" class="form-control sortInput-style">
                    <option value="ProductId">Товар</option>
                    <option value="ProductTakerId">Товар Олувчи</option>
                    <option value="PurchaseDate">Харид Куни</option>
                </select>
                <select id="sortOrder" class="form-control sortInput-style">
                    <option value="asc">Ўсиш тартибида</option>
                    <option value="desc">Камайиш тартибида</option>
                </select>
                <button id="sortButton" class="btn btn-info">
                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 576 512">
                        <style>
                            svg {
                                fill: #050505
                            }</style>
                        <path d="M183.6 469.6C177.5 476.2 169 480 160 480s-17.5-3.8-23.6-10.4l-88-96c-11.9-13-11.1-33.3 2-45.2s33.3-11.1 45.2 2L128 365.7V64c0-17.7 14.3-32 32-32s32 14.3 32 32V365.7l32.4-35.4c11.9-13 32.2-13.9 45.2-2s13.9 32.2 2 45.2l-88 96zM320 320c0-17.7 14.3-32 32-32H480c12.9 0 24.6 7.8 29.6 19.8s2.2 25.7-6.9 34.9L429.3 416H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H352c-12.9 0-24.6-7.8-29.6-19.8s-2.2-25.7 6.9-34.9L402.7 352H352c-17.7 0-32-14.3-32-32zM416 32c12.1 0 23.2 6.8 28.6 17.7l64 128 16 32c7.9 15.8 1.5 35-14.3 42.9s-35 1.5-42.9-14.3L460.2 224H371.8l-7.2 14.3c-7.9 15.8-27.1 22.2-42.9 14.3s-22.2-27.1-14.3-42.9l16-32 64-128C392.8 38.8 403.9 32 416 32zM395.8 176h40.4L416 135.6 395.8 176z" />
                    </svg>
                </button>
                <button id="toggleExtendedSearch" class="btn btn-info">
                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512">
                        <style>
                            svg {
                                fill: #050505
                            }</style>
                        <path d="M3.9 54.9C10.5 40.9 24.5 32 40 32H472c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9V448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6V320.9L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z" />
                    </svg>
                </button>
            </div>

        </div>
    </div>
</div>
<div id="extendedSearchContainer" style="display: none;">
    <div class="row">
        <div class="col">
            <div class="input-block tool-bar3">
                <input id="searchProductId" type="text" class="form-control extendedSearchInput-style" placeholder="Товар">
                <input id="searchProductTakerId" type="text" class="form-control extendedSearchInput-style" placeholder="Товар Олувчи">
                <input id="searchStartDate" type="date" class="form-control extendedSearchInput-style" placeholder="Дан">
                <input id="searchEndDate" type="date" class="form-control extendedSearchInput-style" placeholder="Гача">
                <div class="input-group-append">
                    <button id="searchButton" class="btn btn-info" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512">
                            <style>
                                svg {
                                    fill: #050505
                                }</style>
                            <path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM184 296c0 13.3 10.7 24 24 24s24-10.7 24-24V232h64c13.3 0 24-10.7 24-24s-10.7-24-24-24H232V120c0-13.3-10.7-24-24-24s-24 10.7-24 24v64H120c-13.3 0-24 10.7-24 24s10.7 24 24 24h64v64z" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />

<div class="container bigTableContainer">
    <div class="row rowContainer">
        <div class="col-lg-6" style="width:100%">
            <div class="custom-cards">
                @{
                    if (Model.Length == 0)
                    {
                        <h2>Ҳозирда xаридлар йўқ...</h2>
                    }
                }

                <div class="table-container" style="overflow: scroll; height: 100%; width:100% ">
                    <table id="PurchasesTable" class="table">
                        <thead>
                            <tr>
                                <th class="columnName">Aмаллар</th>
                                <th data-column="ProductId" class="columnName">Товар</th>
                                <th data-column="ProductTakerId" class="columnName">Товар Олувчи</th>
                                <th data-column="PurchaseDate" class="columnName">Харид Куни</th>
                                <th data-column="FinalPriceOfPurchase" class="columnName">Умумий сумма</th>
                                <th data-column="TakenMoneyAmount" class="columnName">Олинган Пул</th>
                                <th data-column="Amount" class="columnName">Миқдор</th>
                                <th data-column="SaleAmountCategoryPercentage" class="columnName">Миқдордан чегирма</th>
                                <th data-column="PricePerAmount" class="columnName">Нарх (1кг/дона)</th>
                                <th data-column="SaleForTotalPrice" class="columnName">Умумий суммадан чегирма</th>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th data-column="CreatedBy" class="columnName">Ким Томонидан</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var Purchase in Model)
                            {
                                <tr>
                                    <td class="action-links">
                                        <div style="display:flex; gap:5px">
                                            <a href="@Url.Action("UpdateClientPurchase", new { id = Purchase.Id })" class="btn btn-secondary">
                                                <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 512 512">
                                                    <style>
                                                        svg {
                                                            fill: #070809
                                                        }</style>
                                                    <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" />
                                                </svg>
                                            </a>
                                            @if (User.IsInRole("Admin"))
                                            {
                                                <a href="@Url.Action("DeletePurchase", new { id = Purchase.Id })" class="btn btn-danger">
                                                    <svg xmlns="http://www.w3.org/2000/svg" height="1.5em" viewBox="0 0 448 512">
                                                        <style>
                                                            svg {
                                                                fill: #070809
                                                            }</style>
                                                        <path d="M170.5 51.6L151.5 80h145l-19-28.4c-1.5-2.2-4-3.6-6.7-3.6H177.1c-2.7 0-5.2 1.3-6.7 3.6zm147-26.6L354.2 80H368h48 8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-8V432c0 44.2-35.8 80-80 80H112c-44.2 0-80-35.8-80-80V128H24c-13.3 0-24-10.7-24-24S10.7 80 24 80h8H80 93.8l36.7-55.1C140.9 9.4 158.4 0 177.1 0h93.7c18.7 0 36.2 9.4 46.6 24.9zM80 128V432c0 17.7 14.3 32 32 32H336c17.7 0 32-14.3 32-32V128H80zm80 64V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16z" />
                                                    </svg>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                    <td data-column="ProductId">@Purchase.Product.Name</td>
                                    <td data-column="ProductTakerId">@Purchase.ProductTaker.CompanyName</td>
                                    <td data-column="PurchaseDate">@Purchase.PurchaseDate.ToString("yyyy-MM-dd")</td>
                                    <td data-column="FinalPriceOfPurchase">@String.Format("{0:N2}", Purchase.FinalPriceOfPurchase).TrimEnd('0').TrimEnd('.')</td>
                                    <td data-column="TakenMoneyAmount">@String.Format("{0:N2}", Purchase.TakenMoneyAmount).TrimEnd('0').TrimEnd('.')</td>
                                    <td data-column="Amount">@Purchase.Amount</td>
                                    <td data-column="SaleAmountCategoryPercentage">@Purchase.SaleAmountCategoryPercentage</td>
                                    <td data-column="PricePerAmount">@String.Format("{0:N2}", Purchase.PricePerAmount).TrimEnd('0').TrimEnd('.')</td>
                                    <td data-column="SaleForTotalPrice">@String.Format("{0:N2}", Purchase.SaleForTotalPrice).TrimEnd('0').TrimEnd('.')</td>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <td data-column="CreatedBy">
                                            @{
                                                var creatorId = Purchase.CreatedBy;
                                                var creator = await UserManager.FindByIdAsync(creatorId);
                                                if (creator != null)
                                                {
                                                    @creator.FirstName @:&nbsp; @creator.LastName
                                                }
                                                else
                                                {
                                                    @("User Not Found")
                                                }
                                            }
                                        </td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('searchButtonSimple').addEventListener('click', function () {
        var input = document.getElementById('searchInput').value.toLowerCase();
        var rows = document.getElementById('PurchasesTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var match = false;

            for (var j = 0; j < cells.length; j++) {
                var cellText = cells[j].innerText.toLowerCase();
                if (cellText.includes(input)) {
                    match = true;
                    break;
                }
            }

            rows[i].style.display = match ? '' : 'none';
        }
    });

    document.getElementById('sortButton').addEventListener('click', function () {
        var column = document.getElementById('sortColumn').value;
        var sortOrder = document.getElementById('sortOrder').value;
        var rows = Array.from(document.getElementById('PurchasesTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr'));

        rows.sort(function (a, b) {
            var cellA = a.querySelector('td[data-column="' + column + '"]').textContent.toLowerCase();
            var cellB = b.querySelector('td[data-column="' + column + '"]').textContent.toLowerCase();

            if (column === "ProductId" || column === "ProductTakerId") {
                if (sortOrder === 'asc') {
                    return cellA.localeCompare(cellB);
                } else {
                    return cellB.localeCompare(cellA);
                }
            }
            if (column === "PaymentDate") {
                cellA = new Date(cellA);
                cellB = new Date(cellB);
            }

            if (sortOrder === 'asc') {
                return cellA < cellB ? -1 : cellA > cellB ? 1 : 0;
            } else {
                return cellB < cellA ? -1 : cellB > cellA ? 1 : 0;
            }
        });

        var tbody = document.getElementById('PurchasesTable').getElementsByTagName('tbody')[0];
        for (var i = 0; i < rows.length; i++) {
            tbody.appendChild(rows[i]);
        }
    });

</script>

<script>
    document.getElementById('searchButton').addEventListener('click', function () {
        var searchProductId = document.getElementById('searchProductId').value.toLowerCase();
        var searchProductTakerId = document.getElementById('searchProductTakerId').value.toLowerCase();
        var searchStartDate = document.getElementById('searchStartDate').value;
        var searchEndDate = document.getElementById('searchEndDate').value;

        var rows = document.getElementById('PurchasesTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var PurchaseDate = Date.parse(cells[3].innerText);

            var match = true;

            if (searchProductId && !cells[1].innerText.toLowerCase().includes(searchProductId)) {
                match = false;
            }
            if (searchProductTakerId && !cells[2].innerText.toLowerCase().includes(searchProductTakerId)) {
                match = false;
            }
            if (searchStartDate) {
                var startDate = new Date(searchStartDate);
                if (searchEndDate) {
                    var endDate = new Date(searchEndDate);
                    if (PurchaseDate < startDate || PurchaseDate > endDate) {
                        match = false;
                    }
                } else {
                    if (!isSameDay(PurchaseDate, startDate)) {
                        match = false;
                    }
                }
            }

            rows[i].style.display = match ? '' : 'none';
        }
    });

    function isSameDay(date1, date2) {
        return date1.getDate() === date2.getDate() &&
            date1.getMonth() === date2.getMonth() &&
            date1.getFullYear() === date2.getFullYear();
    }
</script>

<script>
    document.getElementById('refreshButton').addEventListener('click', function () {
        // Clear the search input field
        document.getElementById('searchInput').value = '';

        // Reset the sorting to default values
        document.getElementById('sortColumn').value = 'ProductTakerId';
        document.getElementById('sortOrder').value = 'asc';

        // Reset the extended search fields
        document.getElementById('searchProductId').value = '';
        document.getElementById('searchProductTakerId').value = '';
        document.getElementById('searchStartDate').value = '';
        document.getElementById('searchEndDate').value = '';

        // Show all rows in the table
        var rows = document.getElementById('PurchasesTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        for (var i = 0; i < rows.length; i++) {
            rows[i].style.display = '';
        }
    });
</script>

<script>
    document.getElementById('toggleExtendedSearch').addEventListener('click', function () {
        var extendedSearchContainer = document.getElementById('extendedSearchContainer');
        if (extendedSearchContainer.style.display === 'none' || extendedSearchContainer.style.display === '') {
            extendedSearchContainer.style.display = 'block';
        } else {
            extendedSearchContainer.style.display = 'none';
        }
    });
</script>
